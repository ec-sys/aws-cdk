aws --endpoint-url=http://localhost:4566 dynamodb list-tables --region eu-central-1
aws --endpoint-url=http://localhost:4566 dynamodb scan \
    --table-name todo_breadcrumb

aws --endpoint-url=http://localhost:4566 dynamodb create-table \
    --table-name todo \
    --attribute-definitions \
        AttributeName=user,AttributeType=S \
        AttributeName=time,AttributeType=S \
    --key-schema AttributeName=user,KeyType=HASH AttributeName=time,KeyType=RANGE \
    --billing-mode PAY_PER_REQUEST

aws --endpoint-url=http://localhost:4566 dynamodb create-table \
    --table-name todo_breadcrumbs \
    --attribute-definitions \
        AttributeName=id,AttributeType=S \
        AttributeName=timestamp,AttributeType=S \
    --key-schema AttributeName=id,KeyType=HASH AttributeName=timestamp,KeyType=RANGE\
    --provisioned-throughput ReadCapacityUnits=5,WriteCapacityUnits=5

aws --endpoint-url=http://localhost:4566 dynamodb create-table \
    --table-name todo_breadcrumb \
    --attribute-definitions \
        AttributeName=id,AttributeType=S \
        AttributeName=timestamp,AttributeType=S \
    --key-schema AttributeName=id,KeyType=HASH AttributeName=timestamp,KeyType=RANGE\
    --provisioned-throughput ReadCapacityUnits=5,WriteCapacityUnits=5


aws --endpoint-url=http://localhost:4566 dynamodb describe-table \
    --table-name todo

aws --endpoint-url=http://localhost:4566 dynamodb put-item \
    --table-name todo  \
    --item \
        '{"user": {"S": "user1"}, "time": {"S": "202204271018000"}, "title": {"S": "title1"}, "contents": {"S": "contents1"}, "done": {"N": "0"}}'

aws --endpoint-url=http://localhost:4566 dynamodb put-item \
    --table-name todo-breadcrumbs  \
    --item \
        '{"id": {"S": "64bf7d389e340a4e3cbddc66"}, "timestamp": {"S": "timestamp"}, "uri": {"S": "title1"}, "username": {"S": "long.dang"}}'

aws --endpoint-url=http://localhost:4566 dynamodb put-item \
    --table-name todo  \
    --item \
        '{"user": {"S": "user2"}, "time": {"S": "202204271028000"}, "title": {"S": "title2"}, "contents": {"S": "contents2"}, "done": {"N": "0"}}'

aws --endpoint-url=http://localhost:4566 dynamodb scan \
    --table-name todo

aws --endpoint-url=http://localhost:4566 dynamodb scan \
    --table-name todo-breadcrumbs

aws --endpoint-url=http://localhost:4566 dynamodb get-item \
    --table-name todo \
    --key '{ "user": { "S": "user1" },  "time": { "S": "202204271018000" }  }'

aws --endpoint-url=http://localhost:4566 dynamodb update-item \
    --table-name todo \
    --key '{ "user": { "S": "user1" },  "time": { "S": "202204271018000" }  }' \
    --update-expression 'set contents = :contents, done=:done' \
    --expression-attribute-values '{ ":contents": { "S": "updated" },  ":done": { "N": "1" }  }' \
    --return-values 'ALL_NEW'

aws --endpoint-url=http://localhost:4566 dynamodb delete-item \
    --table-name todo \
    --key '{ "user": { "S": "user1" },  "time": { "S": "202204271018000" }  }'

aws --endpoint-url=http://localhost:4566 dynamodb delete-table \
    --table-name todo

awslocal dynamodb list-tables --region eu-central-1
awslocal dynamodb list-tables --region us-east-1

aws --endpoint-url=http://localhost:4566 dynamodb scan --table-name todo_breadcrumbs

aws --endpoint-url=http://localhost:4566 dynamodb get-item --table-name todo_breadcrumbs --key '{ "username": { "S": "user1" }  }'

aws --endpoint-url=http://localhost:4566 dynamodb delete-table --table-name todo_breadcrumbs

aws --endpoint-url=http://localhost:4566 dynamodb list-tables --region us-east-1

aws --endpoint-url=http://localhost:4566 sqs list-queues --region us-east-1

aws --endpoint-url=http://localhost:4566 dynamodb sqs receive-message --queue-url http://localhost:4566/000000000000/stratospheric-todo-sharing


mvn spring-boot:run -Dspring-boot.run.profiles=dev -Dspring-boot.run.arguments=--server.port=8085
aws ses verify-email-identity --email-address noreply@stratospheric.dev --endpoint-url=http://localhost:4566

aws ses verify-email-identity --email-address noreply@stratospheric.dev --endpoint-url=http://localhost:4566
aws ses verify-email-identity --email-address info@stratospheric.dev --endpoint-url=http://localhost:4566
aws ses verify-email-identity --email-address tom@stratospheric.dev --endpoint-url=http://localhost:4566
aws ses verify-email-identity --email-address bjoern@stratospheric.dev --endpoint-url=http://localhost:4566
aws ses verify-email-identity --email-address philip@stratospheric.dev --endpoint-url=http://localhost:4566


-----------------
mvn package -Dmaven.test.skip
docker build --tag longdd90jp/aws-esc:todo-app.1.0 .

docker build --tag longdd90jp/aws-esc:zenblog-api.1.0 .
docker run --name ecs-api -it --rm -p 8080:8080 longdd90jp/aws-esc:zenblog-api.1.0

root
admin12345


aws s3api list-buckets --region us-east-1

aws dynamodb list-tables --region us-east-1

aws sqs list-queues --region us-east-1


aws sqs list-queues --region us-east-1 --endpoint-url https://vpce-08e4e4f1ef19271ad-v51vi33l.sqs.us-east-1.vpce.amazonaws.com
private subnet

aws ses list-identities --region us-east-1 --endpoint-url https://email-smtp.us-east-1.amazonaws.com

sudo nano ~/.profile
source ~/.profile

# setting db
export DB_HOST="todo-db.cjcam4zvgp9s.us-east-1.rds.amazonaws.com"
export DB_USER_NAME="todo"
export DB_PASSWORD="root12345"

# setting cognito
export COGNITO_CLIENT_ID="1r6ninjt34cv32epb6qnc6hhqb"
export COGNITO_CLIENT_SECRET="udh7163u697s9t7eq6q2ktnb165e1887rhseg0g2t0nsvbd8lvs"
export COGNITO_CLIENT_NAME="todo-spring-boot"
export COGNITO_PROVIDER_URL="https://cognito-idp.us-east-1.amazonaws.com/us-east-1_T7GTAxqF4"
export COGNITO_LOGOUT_URL="https://dangtit90.auth.us-east-1.amazoncognito.com/logout?response_type=code&client_id=1r6ninjt34cv32epb6qnc6hhqb"
export COGNITO_USER_POOL_ID="us-east-1_T7GTAxqF4"

# setting other
export TODO_SHARING_QUEUE_NAME="stratospheric-todo-sharing"
export NO_REPLY_EMAIL="noreply@stratospheric.dev"
export ACTIVE_PROFILE="ec2"

# mqtt
export MQ_USER="guest"
export MQ_PASSWORD="guest"
export MQ_BROKER_URL="localhost"
export MQ_BROKER_PORT="8161"
export NO_REPLY_EMAIL="longthientai90@gmail.com"

java -jar -Dspring.profiles.active=ec2 app.jar

java -jar app.jar

sudo aws s3 cp s3://dangtit90/todo-app-0.0.1-SNAPSHOT.jar app.jar
sudo aws s3 cp s3://dangtit90/todo-app-api-0.1.jar app.jar

psql -h myhost -d mydb -U myuser
psql -h todo-db.cjcam4zvgp9s.us-east-1.rds.amazonaws.com -d todo-db -U root
psql -h todo-db.cjcam4zvgp9s.us-east-1.rds.amazonaws.com -U todo
psql -h todo-db.cjcam4zvgp9s.us-east-1.rds.amazonaws.com -d postgres -U todo
psql -h todo-db.cjcam4zvgp9s.us-east-1.rds.amazonaws.com -d stratospheric -U todo
root12345

https://www.tutsmake.com/how-to-install-apache-activemq-on-ubuntu-22-04/

100,000,000

sudo psql -h todo-db.cjcam4zvgp9s.us-east-1.rds.amazonaws.com -U todo  -c 'create database stratospheric;'

https://dangtit90.auth.us-east-1.amazoncognito.com/logout?response_type=code&client_id=1r6ninjt34cv32epb6qnc6hhqb


wget https://dlcdn.apache.org//activemq/5.17.0/apache-activemq-5.17.0-bin.tar.gz

wget http://archive.apache.org/dist/activemq/5.17.0/apache-activemq-5.17.0-bin.tar.gz

tar xzf apache-activemq-5.17.0-bin.tar.gz -C /opt

tar xzf apache-activemq-5.17.0-bin.tar.gz -C /opt

https://viblo.asia/p/tao-ung-dung-chat-don-gian-voi-spring-boot-va-websocket-naQZR1DjKvx

docker build --tag longdd90jp/aws-esc:todo-api.0.1 .



eksctl create cluster --name my-cluster --region us-east-2 --version 1.27 --vpc-private-subnets subnet-ExampleID1,subnet-ExampleID2 --without-nodegroup

eksctl create cluster -f cluster.yaml


kubectl create deployment web --image=gcr.io/google-samples/hello-app:1.0 -n todo-app

kubectl expose deployment web --type=NodePort --port=8080 -n todo-app